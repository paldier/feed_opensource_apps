--- a/brctl/brctl_cmd.c	2018-01-09 10:27:18.153235455 +0530
+++ b/brctl/brctl_cmd.c	2018-01-09 10:35:33.074880801 +0530
@@ -365,6 +365,7 @@
 	int i, n;
 	struct fdb_entry *fdb = NULL;
 	int offset = 0;
+	char ifname[IFNAMSIZ];
 
 	for(;;) {
 		fdb = realloc(fdb, (offset + CHUNK) * sizeof(struct fdb_entry));
@@ -388,7 +389,12 @@
 
 	qsort(fdb, offset, sizeof(struct fdb_entry), compare_fdbs);
 
+#ifdef FEATURE_BRCTL_SHOWMACS_IFNAME
+	printf("port no\tmac addr\t\tis local?\tageing timer\tiface\n");
+#else
+
 	printf("port no\tmac addr\t\tis local?\tageing timer\n");
+#endif
 	for (i = 0; i < offset; i++) {
 		const struct fdb_entry *f = fdb + i;
 		printf("%3i\t", f->port_no);
@@ -397,6 +403,9 @@
 		       f->mac_addr[3], f->mac_addr[4], f->mac_addr[5]);
 		printf("%s\t\t", f->is_local?"yes":"no");
 		br_show_timer(&f->ageing_timer_value);
+#ifdef FEATURE_BRCTL_SHOWMACS_IFNAME
+		printf("\t\t%s", portno_to_iface(f->port_no, brname, ifname));
+#endif
 		printf("\n");
 	}
 	return 0;


--- a/libbridge/libbridge.h	2018-01-09 10:40:27.551105488 +0530
+++ b/libbridge/libbridge.h	2018-01-09 10:51:21.011774161 +0530
@@ -117,6 +117,11 @@
 			    int path_cost);
 extern int br_read_fdb(const char *br, struct fdb_entry *fdbs, 
 		       unsigned long skip, int num);
+
+#ifdef FEATURE_BRCTL_SHOWMACS_IFNAME
+extern const char *portno_to_iface(int port_no, const char *brname, char *ifname);
+#endif
+
 extern int br_set_hairpin_mode(const char *bridge, const char *dev,
 			       int hairpin_mode);
 #endif


--- a/libbridge/libbridge_init.c	2018-01-09 10:42:21.237841335 +0530
+++ b/libbridge/libbridge_init.c	2018-01-09 10:51:00.768003549 +0530
@@ -211,3 +211,38 @@
 
 	return count;
 }
+
+#ifdef FEATURE_BRCTL_SHOWMACS_IFNAME
+const char *portno_to_iface(int port_no, const char *brname, char *ifname)
+{
+	int i, count;
+	struct dirent **namelist;
+	char path[SYSFS_PATH_MAX];
+	struct port_info pinfo;
+
+	bzero(ifname, IFNAMSIZ);
+	snprintf(path, SYSFS_PATH_MAX, SYSFS_CLASS_NET "%s/brif", brname);
+	count = scandir(path, &namelist, 0, alphasort);
+	if (count >= 0) {
+		for (i = 0; i < count; i++) {
+			if (namelist[i]->d_name[0] == '.'
+			&& (namelist[i]->d_name[1] == '\0'
+				|| (namelist[i]->d_name[1] == '.'
+				&& namelist[i]->d_name[2] == '\0')))
+				continue;
+
+			if (!(br_get_port_info(brname, namelist[i]->d_name, &pinfo))) {
+				if (port_no == pinfo.port_no) {
+					strcpy(ifname, namelist[i]->d_name);
+					break;
+				}
+			}
+		}
+		for (i = 0; i < count; i++)
+			free(namelist[i]);
+		free(namelist);
+	}
+	return ifname;
+}
+#endif
+
